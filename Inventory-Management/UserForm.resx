<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8PDxEYGBgrExMXQhUVFTwREREPAAArBhcX
        FwsUFBQ/FRUW2QAAAAAPDw8RAAAAAAAAAAARERoeFhYWgRUVFtEVFRb/FRUW/xUVFv8VFRb/ExMYNRUV
        FWwVFRbfFRUW2hUVFv0VFRfAFRUW8RsbGxMVFRVJFRUW9hUVFv8VFRb/FRUW/xUVFv8VFRb/FRUVsxoa
        GgoXFxchFRUW/xUVFrkVFRd8FRUW6hQUFrsAAAAAFBQW1BUVFv4VFRbCFBQWchQUFDMTExkpFRUVJBQU
        FA0UFBdOFhYW7RUVFv8aGhoUAAAAABUVFXkVFRb9FRUW2xUVFsEYGBg/FBQXcBUVF8AVFRb8FRUW/xUV
        Fv8WFhaCGhoaFBUVFW0VFRb/FRUXYxcXFxYUFBa8FRUW2RMTF0IUFBRYFRUW8BUVFv8VFRb/FRUW/xUV
        Fv8VFRb/FRUW+xQUFDIVFRVKFRUW/xUVFv8VFRb/FRUW/xUVFtkVFRUMFRUW0RUVFv8VFRbTFRUVgxYW
        FkcUFBQ0FRUVMRcXFywAACsGFhYWLhUVFUkUFBdmFRUW6xISEhwWFhZqAAAABRYWFskVFRlIFRUVXxQU
        Fq8VFRbrFRUW/hUVFv8VFRb/FRUX7hYWFlMWFhYuGxsbExYWFlEAAAAAAAAAAAAAAAASEhVUFRUW5xUV
        Fv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW+hQUFn0WFhZQAAAAAQAAAAAAAAAAFRUXyxUV
        Fv8VFRbjFRUWlBQUF1gXFxdDFBQUMxYWFjkUFBdNFRUVaxUVFroVFRb6FRUW/xYWFlAAAAAAAAAAABUV
        Fs8VFRVUExMXTxUVF54VFRbaFRUW7xUVFv8WFhb5FRUW5RUVFscVFRV4GBgYNhQUFqMVFRVsAAAAAAAA
        AAATExNRFRUW0xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFvsVFRWFFBQUMwAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABQUFCYVFRbDFRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUV
        Fv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb4FRUXyxQU
        FrsWFhamJCQkBwAAAAAAAAAAAAAAAAAAAAAAAAAAFBQWchUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUV
        FvMVFRfAFRUVnBUVF3oUFBdmFBQXWBUVFVUVFRdXFBQXZhUVFXgWFhaaFBQWvBUVFvEVFRb/FRUW/xUV
        Fv8VFRb/FRUW/xUVFv8VFRWDAAAAAAAAAAAAAAAAAAAAAAAAAAAVFRa3FRUW/xUVFv8VFRb/FRUV4hUV
        FYQUFBQ0AAAABAAAAAAAAAAAAAAAAAAAAAASEhIODw8PEREREQ8AAAAAAAAAAAAAAAAAAAAAAAAAAxUV
        FTAUFBZ/FRUW3RUVFv8VFRb/FRUW/xUVFs8AAAAAAAAAAAAAAAAAAAAAAAAAABUVFsQVFRb/FRUW3xYW
        Fl0AAAACAAAAABUVFSQWFhZoFhYWpRYWFskVFRbrFRUW/xUVFv8VFRb/FRUW/xUVFv8WFhbtFRUXyxUV
        FagVFRVsExMTKAAAAAAAAAABFRUVVRUVFtkVFRb/FRUX1wAAAAAAAAAAAAAAAAAAAAAAAAAAFRUWxBUV
        F7QSEhIOGxsbExQUFn4WFhbVFRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUV
        Fv8VFRb/FRUW/xUVFv8VFRb/FRUW2hUVFYQUFBQZGhoaChUVF6kVFRfXAAAAAAAAAAAAAAAAAAAAAAAA
        AAAVFRedGhoaChYWFmgVFRfuFRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUV
        Fv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFvIUFBZyAAAkBxYWFqYAAAAAAAAAAAAA
        AAAAAAAAAAAAABMTGSkWFhaZFRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUV
        Fv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRWoFxcXLQAA
        AAAAAAAAAAAAAAAAAAAAAAAAFRUVYRUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUV
        Fv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUV
        Fv8UFBZyAAAAAAAAAAAAAAAAAAAAAAAAAAAUFBawFRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUV
        Fv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUV
        Fv8VFRb/FRUW/xUVFsMAAAAAAAAAAAAAAAAAAAAAAAAAABUVFqEVFRb/FRUW/xUVFv8VFRb/FRUW/xUV
        Fv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUV
        Fv8VFRb/FRUW/xUVFv8VFRb/FRUVswAAAAAAAAAAAAAAAAAAAAAAAAAAFBQUNBUVFvoVFRb/FRUW/xUV
        Fv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUV
        Fv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv0TExdCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBQXWRUV
        FvYVFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUV
        Fv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb6FBQXZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAGBgYKxUVFbMVFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUV
        Fv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8VFRb/FBQWvBQUFDIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABcXFywWFhaMFRUW3BUVFv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUV
        Fv8VFRb/FRUW/xUVFv8VFRb/FRUW/xUVFv8UFBbgFRUXkRQUFDMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBQUGRYWFlAWFhZ0FBQWlhUV
        F6oVFRa4FBQWuxUVFrkVFReqFhYWmBYWFnYVFRVUEhISHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///z//8f4//ADkE/AA4APAAPAHgAHxwwD/w+AH/4PgHgHD4XAB
        8cfAAPAHgADgAwB/5jMH//4/HgA/fzAAH/9AAAP/gAAAP4A/gB8D//wfHwAfHzgAAZ9gAADfgAAAP4AA
        AD8AAAAfAAAAH4AAAD/AAAB/4AAA//gAA///wH//
</value>
  </data>
</root>